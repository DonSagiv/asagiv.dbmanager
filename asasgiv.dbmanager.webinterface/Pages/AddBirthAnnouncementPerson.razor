@page "/addBirthAnnouncementPersonView"
@page "/addBirthAnnouncementPersonView/{announcementId}"

@using asagiv.dbmanager.babythankyounotes
@using asagiv.dbmanager.webinterface.Data
@inject MainDbContextService dbContextService
@inject NavigationManager navManager

<h1>Birth Annoucnement Person Details</h1>

@if (annoncementPerson == null || peopleToAdd == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="@annoncementPerson" OnValidSubmit="onAnnouncementPersonValidSubmit">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="input-group input-group-lg" style="margin:5px">
            <div class="input-group-prepend">
                <span style="width:200px" class="input-group-text" id="inputGroup-sizing-lg">Name</span>
            </div>
            <select type="text" class="form-control" @bind="selectedPersonToAdd">
                @foreach (var person in peopleToAdd)
                {
                    <option>@person</option>
                }
            </select>
        </div>

        <div class="input-group input-group-lg" style="margin:5px">
            <div class="input-group-prepend">
                <span style="width:200px" class="input-group-text" id="inputGroup-sizing-lg">Custom Name</span>
            </div>
            <input type="text" class="form-control" @bind="@annoncementPerson.CustomName" />
        </div>

        <div class="d-flex justify-content-center">
            <button type="submit" class="btn btn-primary" style="margin:5px">Save Person</button>
        </div>

    </EditForm>
}

@code
{
    [Parameter]
    public string announcementId { get; set; }

    private RobertBabyAnnouncements annoncementPerson;
    private IList<string> peopleToAdd;
    private string selectedPersonToAdd;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        peopleToAdd = await dbContextService.getPeopleWithoutAnnouncementsAsync();


        if (announcementId == null)
        {
            peopleToAdd = await dbContextService.getPeopleWithoutAnnouncementsAsync();
            annoncementPerson = new RobertBabyAnnouncements();
        }
        else
        {
            annoncementPerson = await dbContextService.getAnnouncementFromId(announcementId);
            peopleToAdd = await dbContextService.getPeopleWithoutAnnouncementsAsync(annoncementPerson.People.ToString());
            selectedPersonToAdd = annoncementPerson.People.ToString();
        }

        peopleToAdd.Insert(0, "Select a person.");
    }

    public async Task onAnnouncementPersonValidSubmit()
    {
        await dbContextService.appendPersonToBirthAnnoucnementsAsync(annoncementPerson, selectedPersonToAdd);
        navManager.NavigateTo("/birthAnnouncementListView");
    }
}
