@page "/babyGiftListView"

@using Microsoft.AspNetCore.Http.Extensions
@using asagiv.dbmanager.addresses
@using asagiv.dbmanager.webinterface.Data
@using BlazorFileSaver
@inject MainDbContextService dbContextService
@inject IBlazorFileSaver blazorFileSaver
@inject NavigationManager navManager

<h1>Robert Baby Gifts</h1>

<div class="d-flex justify-content-center">
    <button type="button" class="btn btn-primary" style="margin:5px" @onclick="onAddBabyGiftClick">Add Baby Gift</button>
    <button type="button" class="btn btn-secondary" style="margin:5px" @onclick="downloadGiftListAsync">Download Text</button>
</div>

@if (familyBabyGifts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Family</th>
                <th>Gift</th>
                <th>TY Note Written</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
           @foreach (var familyBabyGift in familyBabyGifts)
            {
            <tr>

                <td>
                    @foreach (var line in familyBabyGift.family.ToAddressString().Split('\n'))
                    {<div>@line</div>}
            </td>

            <td>@familyBabyGift.babyGift.giftDescription</td>

            <td>
                <div class="form-check">
                    <input class="form-check-input" type="checkbox" checked="@familyBabyGift.thankYouNoteWritten" @onchange="(() => onTyNoteWrittenChanged(familyBabyGift))"  />
                </div>
            </td>

            <td>
                <div class="d-flex justify-content-center">
                    <button class="btn btn-link" @onclick="@(() => editGift(familyBabyGift))" data-toggle="tooltip"
                            data-placement="top" title="Edit">
                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path fill-rule="evenodd" d="M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z" />
                            <path fill-rule="evenodd" d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z" />
                        </svg>
                    </button>
                    <button class="btn btn-link" @onclick="@(() => deleteFamilyGift(familyBabyGift))" data-toggle="tooltip"
                            data-placement="top" title="Delete">
                        <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-trash" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                            <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                            <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                        </svg>
                    </button>
                </div>
            </td>

            </tr>
            }
        </tbody>
    </table>
}

@code
{
    private IList<FamilyBabyGift> familyBabyGifts;

    protected override async Task OnInitializedAsync()
    {
        familyBabyGifts = await dbContextService.getBabyGiftListAsync();
    }

    public string isTyNoteWritten(FamilyBabyGift familyBabyGift)
    {
        return familyBabyGift.thankYouNoteWritten ? "\u2713" : string.Empty;
    }

    public void onAddBabyGiftClick(MouseEventArgs e)
    {
        navManager.NavigateTo("/addBabyGiftView");
    }

    public void editGift(FamilyBabyGift e)
    {
        navManager.NavigateTo($"/addBabyGiftView/{e.babyGiftId}");
    }

    public async Task deleteFamilyGift(FamilyBabyGift e)
    {
        await dbContextService.deleteFamilyBabyGift(e);
        await OnInitializedAsync();
    }

    public async Task onTyNoteWrittenChanged(FamilyBabyGift e)
    {
        await dbContextService.setTyNoteWritten(e);
    }

    public async Task downloadGiftListAsync()
    {
        /*
        var payload = await DbContextFunctions.createBabyGiftList(dbContextService.dbContext);
        var fileName = "Baby_Gift_List.txt";
        await blazorFileSaver.SaveAs(fileName, payload);
        */

        await Task.CompletedTask;
    }

    public async Task onEditGiftClickAsync(BabyGift e)
    {
        await Task.CompletedTask;
    }
}
