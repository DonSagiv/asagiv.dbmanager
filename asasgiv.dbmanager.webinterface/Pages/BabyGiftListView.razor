@page "/babyGiftListView"

@using Microsoft.AspNetCore.Http.Extensions
@using asagiv.dbmanager.addresses
@using asagiv.dbmanager.webinterface.Data
@using BlazorFileSaver
@inject MainDbContextService dbContextService
@inject IBlazorFileSaver blazorFileSaver
@inject NavigationManager navManager

<h1>Robert Baby Gifts</h1>

<div class="d-flex justify-content-center">
    <button type="button" class="btn btn-primary" style="margin:5px" @onclick="onAddBabyGiftClick">Add Baby Gift</button>
    <button type="button" class="btn btn-secondary" style="margin:5px" @onclick="downloadGiftListAsync">Download Text</button>
</div>

@if (familyBabyGifts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Family</th>
                <th>Gift</th>
                <th>TY Note Written</th>
            </tr>
        </thead>
        <tbody>
           @foreach (var familyBabyGift in familyBabyGifts)
            {
                <tr>

                    <td>@foreach(var line in familyBabyGift.family.ToAddressString().Split('\n'))
                    { <div>@line</div> }
                    </td>

                    <td>@familyBabyGift.babyGift.giftDescription</td>

                    <td>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" checked="@familyBabyGift.thankYouNoteWritten"/>
                        </div>
                    </td>

                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private IList<FamilyBabyGift> familyBabyGifts;

    protected override async Task OnInitializedAsync()
    {
        familyBabyGifts = await dbContextService.getBabyGiftListAsync();
    }

    public string isTyNoteWritten(BabyGift babyGift)
    {
        // return babyGift.Value ? "\u2713" : string.Empty;
        return "\u2713";
    }

    public void onAddBabyGiftClick(MouseEventArgs e)
    {
        navManager.NavigateTo("/addBabyGiftView");
    }

    public async Task downloadGiftListAsync()
    {
        /*
        var payload = await DbContextFunctions.createBabyGiftList(dbContextService.dbContext);
        var fileName = "Baby_Gift_List.txt";
        await blazorFileSaver.SaveAs(fileName, payload);
        */

        await Task.CompletedTask;
    }

    public async Task onEditGiftClickAsync(BabyGift e)
    {
        await Task.CompletedTask;
    }
}
