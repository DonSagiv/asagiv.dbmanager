@page "/"
@page "/peopleView"

@using Microsoft.AspNetCore.Http.Extensions
@using asagiv.dbmanager.addresses
@using asagiv.dbmanager.webinterface.Data
@inject MainDbContextService dbContextService
@inject NavigationManager navManager

<h1>Addresses</h1>

<div class="d-flex justify-content-center">
    <button type="button" class="btn btn-primary" style="margin:5px" @onclick="onAddNewPersonClick">Add New Person</button>
</div>

<div class="d-flex justify-content-center">

    <div class="input-group mb-4" style="max-width:400px;margin:5px">
        <input type="text" class="form-control" placeholder="Search User" aria-label="Search User" aria-describedby="searchField"
               @bind-value="@filterString"
               @bind-value:event="oninput"
               @onkeypress="@filterOnKeyPressed">
        <div class="input-group-append">
            <button class="btn btn-outline-secondary" type="button" id="searchField" @onclick="onSearchClicked">
                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-search" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                    <path fill-rule="evenodd" d="M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z" />
                    <path fill-rule="evenodd" d="M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z" />
                </svg>
            </button>
        </div>
    </div>

</div>

@if (families == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Street</th>
                <th>City</th>
                <th>State</th>
                <th>Country</th>
                <th>Zip</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var family in families)
            {
                <tr>
                    <td>@family.addressHeader</td>
                    <td>@family.addresses.FirstOrDefault()?.street</td>
                    <td>@family.addresses.FirstOrDefault()?.city</td>
                    <td>@family.addresses.FirstOrDefault()?.state</td>
                    <td>@family.addresses.FirstOrDefault()?.country</td>
                    <td>@family.addresses.FirstOrDefault()?.zip</td>
                    <td>
                        <div class="d-flex justify-content-center">
                            <button class="btn btn-link" @onclick="@(() => editPerson(family))" data-toggle="tooltip"
                                    data-placement="top" title="Edit">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-pencil" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" d="M11.293 1.293a1 1 0 0 1 1.414 0l2 2a1 1 0 0 1 0 1.414l-9 9a1 1 0 0 1-.39.242l-3 1a1 1 0 0 1-1.266-1.265l1-3a1 1 0 0 1 .242-.391l9-9zM12 2l2 2-9 9-3 1 1-3 9-9z" />
                                    <path fill-rule="evenodd" d="M12.146 6.354l-2.5-2.5.708-.708 2.5 2.5-.707.708zM3 10v.5a.5.5 0 0 0 .5.5H4v.5a.5.5 0 0 0 .5.5H5v.5a.5.5 0 0 0 .5.5H6v-1.5a.5.5 0 0 0-.5-.5H5v-.5a.5.5 0 0 0-.5-.5H3z" />
                                </svg>
                            </button>
                            <button class="btn btn-link" @onclick="@(() => deletePersonAsync(family))" data-toggle="tooltip"
                                    data-placement="top" title="Delete">
                                <svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-trash" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" />
                                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4L4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" />
                                </svg>
                            </button>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code
{
    private IList<Family> families;
    public string filterString { get; set; }

    protected override async Task OnInitializedAsync()
    {
        families = await dbContextService.getFamiliesAsync();
    }

    public void onAddNewPersonClick(MouseEventArgs e)
    {
        navManager.NavigateTo("/addPersonView");
    }

    public void editPerson(Family family)
    {
        navManager.NavigateTo($"addPersonView/{family.familyId}");
    }

    public async Task deletePersonAsync(Family family)
    {
        /*
        var parameters = new ModalParameters();
        parameters.Add("person", family);

        var a = modal.Show<ConfirmDeletePerson>("Delete Person", parameters);
        var result = await a.Result;

        if (result.Cancelled) return;

        await dbContextService.deleteFamilyAsync(family);

        // Reload the people.
        await this.OnInitializedAsync();
        */

        await Task.CompletedTask;
    }

    public async Task filterOnKeyPressed(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
            await onSearchClicked();
    }

    public async Task onSearchClicked()
    {
        if (string.IsNullOrWhiteSpace(filterString))
        {
            families = await dbContextService.getFamiliesAsync();
        }
        else
        {
            families = await dbContextService.filterFamiliesAsync(filterString);
        }
    }
}
